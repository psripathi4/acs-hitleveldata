parameters:
  awsCredentials: ''
  awsRegion: ''
  bucketName: ''
  cfnRoleArn: ''
  azdoArtifactPrefix: ''
  lambdaServiceRoleARN: ''


steps:
# Upload CFN Templates to S3
- task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
  displayName: 'S3 Upload: CFN Templates'
  inputs:
    awsCredentials: ${{ parameters.awsCredentials }}
    regionName: ${{ parameters.awsRegion }}
    bucketName: ${{ parameters.bucketName }}
    sourceFolder: '$(Pipeline.Workspace)/Publish.PublishBuildArtifacts/a/cfn'
    targetFolder: '${{ parameters.azdoArtifactPrefix }}/cfn'
    logRequest: true
    logResponse: true

# Upload Code Artifacts to S3
- task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
  displayName: 'S3 Upload: Code Artifacts'
  inputs:
    awsCredentials: ${{ parameters.awsCredentials }}
    regionName: ${{ parameters.awsRegion }}
    bucketName: ${{ parameters.bucketName }}
    sourceFolder: '$(Pipeline.Workspace)/code_artifacts'
    targetFolder: '${{ parameters.azdoArtifactPrefix }}/$(Build.BuildId)/lambda/'
    logRequest: true
    logResponse: true

# Lambda - Process hit level data
- task: AmazonWebServices.aws-vsts-tools.CloudFormationCreateOrUpdateStack.CloudFormationCreateOrUpdateStack@1
  displayName: 'Create/Update Stack: Lambda to process Hit-Level Data'
  inputs:
    awsCredentials: ${{ parameters.awsCredentials }}
    regionName: ${{ parameters.awsRegion }}
    stackName: lambda-acs-hit-level-data-processor
    templateSource: s3
    s3BucketName: ${{ parameters.bucketName }}
    s3ObjectKey: '${{ parameters.azdoArtifactPrefix }}/cfn/Lambda.yml'
    templateParametersSource: inline
    templateParameters: |
      - 
        ParameterKey: FunctionName
        ParameterValue: acs-hit-level-data-processor
      - 
        ParameterKey: Runtime
        ParameterValue: python3.7
      - 
        ParameterKey: S3Bucket
        ParameterValue: ${{ parameters.bucketName }}
      - 
        ParameterKey: S3Key
        ParameterValue: ${{ parameters.azdoArtifactPrefix }}/$(Build.BuildId)/lambda/process_hit_level_data_$(Build.BuildId).zip
      - 
        ParameterKey: LambdaHandler
        ParameterValue: process_hit_level_data.lambda_function.lambda_handler
      - 
        ParameterKey: MemorySize
        ParameterValue: '256'
      - 
        ParameterKey: Timeout
        ParameterValue: '120'
      - 
        ParameterKey: RoleArn
        ParameterValue: ${{ parameters.lambdaServiceRoleARN }}
    
    roleARN: ${{ parameters.cfnRoleArn }}
    captureStackOutputs: asVariables
    logRequest: true
    logResponse: true
    timeoutInMins: 15
  timeoutInMinutes: 15
